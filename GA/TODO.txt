Basically Working (complete exhaustive tests sometime)

NOTES:
In reality haploid m/f join. Cross overs + muts occur in parent only!
Adapted here so that cross overs occur between haploid parents.
	

===========================
Documentation
===========================
genes held in single T[units] array.
A second array collects children and they are swapped

Fitness algo measures the population for 2 reasons:
1/ produces 2 paramaters (pop_min_f, f_unit) to determine the number of kids each pair is due.
2/ to list the population phenotypes.

Marry. Mating strategies have been explored.
Sorted fitness is used to chose pairs.
>Top 2 marry, etc

Breed performs the generation of next generation + irradiates it.

Crossovers recorded in an ordered map.
On replication of the population dna, switch parents according to the map.
At crossover use 1/crossover map and 2/its complement to mix the parental bits
State of parential switch changed according to bmask final bit of crossover mask
Crossovers are rare, most of process is just copying the dna across.

Irradiated (mutated) by evenly dropped along array

Evolve is the highest level function.
Uses the fitness measures and orchestrates a generation, increasing the pop generation count.


//////////////////////////////////////////////////////////////////////////////////
// Dependency injection version

>Need to provide a code for the injected function to check deserialising into correct environment
	i.e. which phenotype did this population get run against
	ALSO serialisation is now not matching the setup!

>gene count is linked to phenotype so this should be in the injection
	however this is deep as needed to define the population.

>Population size, gene size (bits) (templated) = precision are actually environmental parameters.
p.s. can we get gene_size from the T rather than code it manually.


